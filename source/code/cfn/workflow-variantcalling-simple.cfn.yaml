---
AWSTemplateFormatVersion: 2010-09-09
Description: >
  Simple FASTQ to VCF variant calling workflow based on BWA-MEM, samtools, and bcftools

Parameters:

  InputDataPrefix:
    Type: String
  
  OutputDataPrefix:
    Type: String

  BatchJobDefinitionBwa:
    Type: String
  BatchJobDefinitionSamtools:
    Type: String
  BatchJobDefinitionBcftools:
    Type: String
  BatchJobDefinitionKraken:
    Type: String  
  BatchJobQueue:
    Type: String  
  StatesExecutionRoleArn:
    Type: String

Resources:
  StateMachine:
    Type: "AWS::StepFunctions::StateMachine"
    Properties:
      StateMachineName: !Ref "AWS::StackName"
      RoleArn: !Ref StatesExecutionRoleArn #required
      DefinitionString: !Sub |-
        {
            "Comment": "Simple Genomics Workflow with mapping",
            "StartAt": "Initialize",
            "States": {
                "Initialize": {
                    "Type": "Pass",
                    "InputPath": "$",
                    "Parameters": {
                        "workflow": {
                            "name.$": "$$.StateMachine.Name",
                            "execution.$": "$$.Execution.Name" 
                        },
                        "params.$": "$.params",
                        "jobdefs": {
                            "bwa": "${BatchJobDefinitionBwa}",
                            "samtools": "${BatchJobDefinitionSamtools}",
                            "bcftools": "${BatchJobDefinitionBcftools}"
                        }
                    },
                    "Next": "BwaMem"
                },
                "BwaMem": {
                    "Type": "Task",
                    "InputPath": "$",
                    "ResultPath": "$.result",
                    "Resource": "arn:aws:states:::batch:submitJob.sync",
                    "Parameters": {
                        "JobName": "bwa-mem",
                        "JobDefinition.$": "$.jobdefs.bwa",
                        "JobQueue.$": "$.params.queue",
                        "ContainerOverrides": {
                            "Vcpus": 8,
                            "Memory": 8000,
                            "Environment": [
                                {"Name": "JOB_WORKFLOW_NAME", "Value.$": "$.workflow.name"},
                                {"Name": "JOB_WORKFLOW_EXECUTION_ID", "Value.$": "$.workflow.execution"},
                                {"Name": "JOB_INPUTS", "Value": "s3://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta* ${!SOURCE_DATA_PREFIX}/${!SAMPLE_ID}*"},
                                {"Name": "JOB_OUTPUTS", "Value": "*.sam"},
                                {"Name": "JOB_OUTPUT_PREFIX", "Value.$": "$.params.environment.JOB_OUTPUT_PREFIX"},
                                {"Name": "JOB_AWS_CLI_PATH", "Value.$": "$.params.environment.JOB_AWS_CLI_PATH"},
                                {"Name": "SOURCE_DATA_PREFIX", "Value.$": "$.params.environment.SOURCE_DATA_PREFIX"},
                                {"Name": "SAMPLE_ID", "Value.$": "$.params.environment.SAMPLE_ID"},
                                {"Name": "REFERENCE_NAME", "Value.$": "$.params.environment.REFERENCE_NAME"}
                            ],
                            "Command": [
                                "bwa mem -t 8 -p -o ${!SAMPLE_ID}.sam ${!REFERENCE_NAME}.fasta ${!SAMPLE_ID}_*1*.fastq.gz"
                            ]
                        }
                    },
                    "Next": "SamtoolsSort"
                },
                "SamtoolsSort": {
                    "Type": "Task",
                    "InputPath": "$",
                    "ResultPath": "$.result",
                    "Resource": "arn:aws:states:::batch:submitJob.sync",
                    "Parameters": {
                        "JobName": "samtools-sort",
                        "JobDefinition.$": "$.jobdefs.samtools",
                        "JobQueue.$": "$.params.queue",
                        "ContainerOverrides": {
                            "Vcpus": 4,
                            "Memory": 8000,
                            "Environment": [
                                {"Name": "JOB_WORKFLOW_NAME", "Value.$": "$.workflow.name"},
                                {"Name": "JOB_WORKFLOW_EXECUTION_ID", "Value.$": "$.workflow.execution"},
                                {"Name": "JOB_INPUT_PREFIX", "Value": "${!JOB_OUTPUT_PREFIX}/${!JOB_WORKFLOW_NAME}/${!JOB_WORKFLOW_EXECUTION_ID}"},
                                {"Name": "JOB_INPUTS", "Value": "${!JOB_INPUT_PREFIX}/*.sam"},
                                {"Name": "JOB_OUTPUTS", "Value": "*.bam"},
                                {"Name": "JOB_OUTPUT_PREFIX", "Value.$": "$.params.environment.JOB_OUTPUT_PREFIX"},
                                {"Name": "JOB_AWS_CLI_PATH", "Value.$": "$.params.environment.JOB_AWS_CLI_PATH"},
                                {"Name": "SAMPLE_ID", "Value.$": "$.params.environment.SAMPLE_ID"}
                            ],
                            "Command": [
                                "samtools sort -@ 4 -o ${!SAMPLE_ID}.bam ${!SAMPLE_ID}.sam"
                            ]
                        }
                    },
                    "Next": "SamtoolsIndex"
                },
                "SamtoolsIndex": {
                    "Type": "Task",
                    "InputPath": "$",
                    "ResultPath": "$.result",
                    "Resource": "arn:aws:states:::batch:submitJob.sync",
                    "Parameters": {
                        "JobName": "samtools-index",
                        "JobDefinition.$": "$.jobdefs.samtools",
                        "JobQueue.$": "$.params.queue",
                        "ContainerOverrides": {
                            "Vcpus": 1,
                            "Memory": 1024,
                            "Environment": [
                                {"Name": "JOB_WORKFLOW_NAME", "Value.$": "$.workflow.name"},
                                {"Name": "JOB_WORKFLOW_EXECUTION_ID", "Value.$": "$.workflow.execution"},
                                {"Name": "JOB_INPUT_PREFIX", "Value": "${!JOB_OUTPUT_PREFIX}/${!JOB_WORKFLOW_NAME}/${!JOB_WORKFLOW_EXECUTION_ID}"},
                                {"Name": "JOB_INPUTS", "Value": "${!JOB_INPUT_PREFIX}/*.bam"},
                                {"Name": "JOB_OUTPUTS", "Value": "*.bam*"},
                                {"Name": "JOB_OUTPUT_PREFIX", "Value.$": "$.params.environment.JOB_OUTPUT_PREFIX"},
                                {"Name": "JOB_AWS_CLI_PATH", "Value.$": "$.params.environment.JOB_AWS_CLI_PATH"},
                                {"Name": "SAMPLE_ID", "Value.$": "$.params.environment.SAMPLE_ID"}
                            ],
                            "Command": [
                                "samtools index ${!SAMPLE_ID}.bam"
                            ]
                        }
                    },
                    "Next": "CallVariantsByChromosome"
                },
                "CallVariantsByChromosome" : {
                    "Type": "Map",
                    "InputPath": "$",
                    "ItemsPath": "$.params.chromosomes",
                    "MaxConcurrency": 23,
                    "ResultPath": "$.results.variant_calls",
                    "Parameters": {
                        "workflow.$": "$.workflow",
                        "params.$": "$.params",
                        "chromosome.$": "$$.Map.Item.Value",
                        "jobdefs.$": "$.jobdefs"
                    },
                    "Iterator": {
                        "StartAt": "BcftoolsMPileup",
                        "States": {
                            "BcftoolsMPileup": {
                                "Type": "Task",
                                "InputPath": "$",
                                "ResultPath": "$.result",
                                "Resource": "arn:aws:states:::batch:submitJob.sync",
                                "Parameters": {
                                    "JobName": "bcftools-mpileup",
                                    "JobDefinition.$": "$.jobdefs.bcftools",
                                    "JobQueue.$": "$.params.queue",
                                    "ContainerOverrides": {
                                        "Vcpus": 4,
                                        "Memory": 4096,
                                        "Environment": [
                                            {"Name": "JOB_WORKFLOW_NAME", "Value.$": "$.workflow.name"},
                                            {"Name": "JOB_WORKFLOW_EXECUTION_ID", "Value.$": "$.workflow.execution"},
                                            {"Name": "JOB_INPUT_PREFIX", "Value": "${!JOB_OUTPUT_PREFIX}/${!JOB_WORKFLOW_NAME}/${!JOB_WORKFLOW_EXECUTION_ID}"},
                                            {"Name": "JOB_INPUTS", "Value": "s3://broad-references/hg38/v0/Homo_sapiens_assembly38.fasta* ${!JOB_INPUT_PREFIX}/*.bam*"},
                                            {"Name": "JOB_OUTPUTS", "Value": "*.mpileup.gz"},
                                            {"Name": "JOB_OUTPUT_PREFIX", "Value.$": "$.params.environment.JOB_OUTPUT_PREFIX"},
                                            {"Name": "JOB_AWS_CLI_PATH", "Value.$": "$.params.environment.JOB_AWS_CLI_PATH"},
                                            {"Name": "SAMPLE_ID", "Value.$": "$.params.environment.SAMPLE_ID"},
                                            {"Name": "REFERENCE_NAME", "Value.$": "$.params.environment.REFERENCE_NAME"},
                                            {"Name": "CHROMOSOME", "Value.$": "$.chromosome"}
                                        ],
                                        "Command": [
                                            "bcftools mpileup --threads 4 -r ${!CHROMOSOME} -Oz -f ${!REFERENCE_NAME}.fasta -o ${!SAMPLE_ID}.${!CHROMOSOME}.mpileup.gz ${!SAMPLE_ID}.bam"
                                        ]
                                    }
                                },
                                "Next": "BcftoolsCall"
                            },
                            "BcftoolsCall": {
                                "Type": "Task",
                                "InputPath": "$",
                                "ResultPath": "$.result",
                                "Resource": "arn:aws:states:::batch:submitJob.sync",
                                "Parameters": {
                                    "JobName": "bcftools-call",
                                    "JobDefinition.$": "$.jobdefs.bcftools",
                                    "JobQueue.$": "$.params.queue",
                                    "ContainerOverrides": {
                                        "Vcpus": 2,
                                        "Memory": 1024,
                                        "Environment": [
                                            {"Name": "JOB_WORKFLOW_NAME", "Value.$": "$.workflow.name"},
                                            {"Name": "JOB_WORKFLOW_EXECUTION_ID", "Value.$": "$.workflow.execution"},
                                            {"Name": "JOB_INPUT_PREFIX", "Value": "${!JOB_OUTPUT_PREFIX}/${!JOB_WORKFLOW_NAME}/${!JOB_WORKFLOW_EXECUTION_ID}"},
                                            {"Name": "JOB_INPUTS", "Value": "${!JOB_INPUT_PREFIX}/*.${!CHROMOSOME}.mpileup.gz"},
                                            {"Name": "JOB_OUTPUTS", "Value": "*.vcf.gz"},
                                            {"Name": "JOB_OUTPUT_PREFIX", "Value.$": "$.params.environment.JOB_OUTPUT_PREFIX"},
                                            {"Name": "JOB_AWS_CLI_PATH", "Value.$": "$.params.environment.JOB_AWS_CLI_PATH"},
                                            {"Name": "SAMPLE_ID", "Value.$": "$.params.environment.SAMPLE_ID"},
                                            {"Name": "CHROMOSOME", "Value.$": "$.chromosome"}
                                        ],
                                        "Command": [
                                            "bcftools call -m --threads 2 -t ${!CHROMOSOME} -Oz -o ${!SAMPLE_ID}.${!CHROMOSOME}.vcf.gz ${!SAMPLE_ID}.${!CHROMOSOME}.mpileup.gz"
                                        ]
                                    }
                                },
                                "End": true
                            }
                        }
                    },
                    "End": true
                }
            }
        }

Outputs:
  WorkflowArn:
    Description: Workflow statemachine ARN
    Value: !Ref StateMachine
  WorkflowName:
    Description: Workflow statemachine Name
    Value: !GetAtt StateMachine.Name
  WorkflowInput:
    Description: Example input for workflow statemachine
    Value: !Sub |-
      {
          "params": {
              "queue": "${BatchJobQueue}",
              "environment": {
                  "REFERENCE_NAME": "Homo_sapiens_assembly38",
                  "SAMPLE_ID": "NIST7035",
                  "SOURCE_DATA_PREFIX": "${InputDataPrefix}",
                  "JOB_OUTPUT_PREFIX": "${OutputDataPrefix}",
                  "JOB_AWS_CLI_PATH": "/opt/miniconda/bin"
              },
              "chromosomes": [
                "chr20",
                "chr21"
              ]
          }
      }
...
